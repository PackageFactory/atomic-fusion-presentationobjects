name: CI

on: [push]

jobs:
  coding-standard:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, intl
          tools: phpcs

      - name: Run PHP Code Sniffer
        run: |
          phpcs \
            --standard=PSR2 \
            --extensions=php \
            --exclude=Generic.Files.LineLength \
            Classes/ Tests/

  static-analysis:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, intl

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: |
          composer install

      - name: Run phpstan on Tests/
        run: |
          bin/phpstan analyse \
            --autoload-file Build/BuildEssentials/PhpUnit/UnitTestBootstrap.php \
            --level 8 \
            Tests/Unit

      - name: Run phpstan on Classes/
        run: |
          bin/phpstan analyse --level 8 Classes

  unit-tests:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, intl
          coverage: xdebug

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: |
          composer install

      - name: Run unit tests
        run: |
          bin/phpunit -c phpunit.xml \
            --enforce-time-limit \
            --coverage-text \
            Tests
